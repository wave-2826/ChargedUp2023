// RobotBuilder Version: 5.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// C++ from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.

// ROBOTBUILDER TYPE: Command.

#include <iostream>
#include "commands/EndEffectorDown.h"
#include "commands/WaveWaitCommand.h"

EndEffectorDown::EndEffectorDown(EndEffector* endEffector)
: m_endEffector(endEffector), m_targetReached(false)
{

    // Use AddRequirements() here to declare subsystem dependencies
    // eg. AddRequirements(m_Subsystem);
    SetName("EndEffectorDown");
    AddRequirements({m_endEffector});
}

// Called just before this Command runs the first time
void EndEffectorDown::Initialize() 
{
    m_targetReached = false;
    m_timerSet = false;
    m_endEffector->setCone(true);
    m_endEffector->setLEDS();
}

// Called repeatedly when this Command is scheduled to run
void EndEffectorDown::Execute() 
{
    if(!m_timerSet)
    {
        m_endEffector->setConeOut();
        m_timerSet = true;
    }

    m_targetReached = m_endEffector->rollerOut();
}

// Make this return true when this Command no longer needs to run execute()
bool EndEffectorDown::IsFinished() 
{
    return m_targetReached;
}

// Called once after isFinished returns true
void EndEffectorDown::End(bool interrupted) 
{
    m_targetReached = false;
    m_timerSet = false;
}

bool EndEffectorDown::RunsWhenDisabled() const 
{
    return false;
}