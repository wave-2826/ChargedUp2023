// RobotBuilder Version: 5.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// C++ from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.

// ROBOTBUILDER TYPE: Command.

#include "commands/DriveTimed.h"
#include "commands/WaveWaitCommand.h"
#include <iostream>

DriveTimed::DriveTimed(SwerveDrive* swerveDrive, double inputLX, double inputLY, double inputRX, units::second_t timeout)
                      : WaitCommand(timeout), m_swerveDrive(swerveDrive), m_inputLX(inputLX),
                        m_inputLY(inputLY), m_inputRX(inputRX), m_timeout(timeout)
{

    // Use AddRequirements() here to declare subsystem dependencies
    // eg. AddRequirements(m_Subsystem);
    SetName("DriveTimed");
    m_timeout = timeout;
}

// Called just before this Command runs the first time
void DriveTimed::Initialize() {
    WaitCommand::Initialize();
    // m_swerveDrive->InitialSwerve();
}

// Called repeatedly when this Command is scheduled to run
void DriveTimed::Execute() {
    m_swerveDrive->DrivePods(m_inputLX, m_inputLY, m_inputRX, nullptr);
}

// Make this return true when this Command no longer needs to run execute()
// bool DriveTimed::IsFinished() {
//     // m_swerveDrive->DrivePods(0, 0, 0);
//     // return false;
// }

// Called once after isFinished returns true
void DriveTimed::End(bool interrupted) {
    // std::cout << "Drive Timed" << std::endl;
    WaitCommand::End(interrupted);
    m_swerveDrive->DrivePods(0, 0, 0, nullptr);
}

bool DriveTimed::RunsWhenDisabled() const {
    return false;

}
