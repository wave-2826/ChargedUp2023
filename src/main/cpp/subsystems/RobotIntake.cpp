// RobotBuilder Version: 5.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// C++ from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.

// ROBOTBUILDER TYPE: Subsystem.

#include "subsystems/RobotIntake.h"
#include "RobotContainer.h"
#include <frc/smartdashboard/SmartDashboard.h>

/**
 * RobotIntake subsystem implementation
 *
 * @author 2826WaveRobotics
 */
RobotIntake::RobotIntake()
{
    SetName("RobotIntake");
    SetSubsystem("RobotIntake");

    // pneumatics
    m_compressor = new frc::Compressor(k_pneumaticHub, frc::PneumaticsModuleType::REVPH);
    m_pneumaticHub.EnableCompressorAnalog(units::pressure::pounds_per_square_inch_t(90), 
                                          units::pressure::pounds_per_square_inch_t(110));
}

// Initializers
void RobotIntake::Initialize() 
{
    m_driverJoystick = RobotContainer::GetInstance()->getDriver();
}

// Put code here to be run every loop
void RobotIntake::Periodic() {}

// This method will be called once per scheduler run when in simulation
void RobotIntake::SimulationPeriodic() {}

// robot intake funtions
void RobotIntake::robotIntakeClamp(bool isClamped)
{
    m_robotIntakeClampSolenoid.Set(isClamped);
}

void RobotIntake::robotIntakeDeploy(bool isDeployed)
{
    m_robotIntakeDeploySolenoid.Set(isDeployed);
}

void RobotIntake::runRobotIntake() 
{
    // robot intake deploy
    if (m_driverJoystick->GetLeftBumper() && m_driverJoystick->GetRightBumper())
    {
        // deploy
        robotIntakeDeploy(true);
    }
    else
    {
        robotIntakeDeploy(false);
    }

    // robot intake clamp
    if (m_driverJoystick->GetXButton() && m_driverJoystick->GetPOV() == -1)
    {
        // clamp
        robotIntakeClamp(true);
    }
    else 
    {
        // release
        robotIntakeClamp(false);
    }

}
