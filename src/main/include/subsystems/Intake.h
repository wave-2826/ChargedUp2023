// RobotBuilder Version: 5.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// C++ from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.

// ROBOTBUILDER TYPE: Subsystem.
#pragma once

#include <frc2/command/SubsystemBase.h>
#include <frc/XboxController.h>
#include <rev/CANSparkMax.h>
#include <rev/CANSparkMaxLowLevel.h>
#include "Globals.h"

/**
 * Intake subsystem header file
 *
 * @author 2826WaveRobotics
 */
class Intake: public frc2::SubsystemBase 
{
    private:
        // It's desirable that everything possible is private except
        // for methods that implement subsystem capabilities

        // intake motors
        rev::CANSparkMax *m_intakeLeftDeployMotor;
        rev::CANSparkMax *m_intakeRightDeployMotor;
        rev::SparkMaxRelativeEncoder *m_intakeLeftEncoder;
        rev::CANSparkMax *m_intakeRollerMotor;

        // Pointer to the operator controller
        frc::XboxController *m_operatorJoystick;

        double m_intakePosition;
        double m_distancePerRotation;

        static constexpr const double k_maxIntakeSpeed = 0.8;
        static constexpr const double k_maxIntakeRollerSpeed = 0.5;
        static constexpr const double k_wheelDiameter = 4.25; // in inches
        static constexpr const double k_gearRatio = 125.0;     // 125:1

        bool moveToTarget(double target);


    public:
        Intake();

        void moveIntake(double speed);
        void setIntakeRollerMotorSpeed(double speed);
        void runIntake();

        void Initialize();
        void Periodic() override;
        void SimulationPeriodic() override;

        double getIntakePosition();

        bool stowIntake();

};

